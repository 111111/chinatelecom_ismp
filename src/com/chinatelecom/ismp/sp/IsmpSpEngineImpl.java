
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.chinatelecom.ismp.sp;

import com.chinatelecom.ismp.sp.req.OrderRelationUpdateNotifyReq;
import com.temobi.oface.common.db.IapDbHelper;
import com.temobi.oface.common.db.InfaceDbHelper;
import com.temobi.oface.common.util.SysLog;

import java.util.Map;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2014-08-21T11:35:41.856+08:00
 * Generated source version: 3.0.1
 * 
 */

@WebService(
                      serviceName = "IsmpSpEngineService",
                      portName = "IsmpSpEngine",
                      targetNamespace = "http://sp.ismp.chinatelecom.com",
                      wsdlLocation = "/wsdl/IsmpSpEngine.wsdl",
                      endpointInterface = "com.chinatelecom.ismp.sp.IsmpSpEngine")
                      
public class IsmpSpEngineImpl implements IsmpSpEngine {

    private static final Logger LOG = Logger.getLogger(IsmpSpEngineImpl.class.getName());

    /* (non-Javadoc)
     * @see com.chinatelecom.ismp.sp.IsmpSpEngine#spWithdrawSubscription(com.chinatelecom.ismp.sp.req.SPWithdrawSubscriptionReq  spWithdrawSubscriptionReqPara )*
     */
    public com.chinatelecom.ismp.sp.rsp.Response spWithdrawSubscription(com.chinatelecom.ismp.sp.req.SPWithdrawSubscriptionReq spWithdrawSubscriptionReqPara) {
        SysLog.wsInfo("Executing IsmpSpEngineImpl.spWithdrawSubscription...");
        try {
            SysLog.wsInfo("[spws] - spWithdrawSubscription--->" + spWithdrawSubscriptionReqPara.toJson());
            com.chinatelecom.ismp.sp.rsp.Response _return = new com.chinatelecom.ismp.sp.rsp.Response();
            _return.setStreamingNo(spWithdrawSubscriptionReqPara.getStreamingNo());
            _return.setResultCode(0);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* 订购关系通知更新接口
     * @see com.chinatelecom.ismp.sp.IsmpSpEngine#orderRelationUpdateNotify(com.chinatelecom.ismp.sp.req.OrderRelationUpdateNotifyReq  orderRelationUpdateNotifyReq )*
     */
    public com.chinatelecom.ismp.sp.rsp.Response orderRelationUpdateNotify(OrderRelationUpdateNotifyReq orderRelationUpdateNotifyReq) {
//        SysLog.wsInfo("Executing IsmpSpEngineImpl.orderRelationUpdateNotify...");
        try {
            SysLog.wsInfo("[orun] - orderRelationUpdateNotify--->" + orderRelationUpdateNotifyReq.toJson());

            //0：订购  1：暂停  2：暂停恢复  3：退订  4：退订该Sp下的所有套餐  5：暂停该SP下的所有套餐 6：替换
            int opType = orderRelationUpdateNotifyReq.getOPType();

            String userID = orderRelationUpdateNotifyReq.getUserID();//用户号码
            if(userID == null || "".equals(userID.trim())){
                SysLog.wsInfo("[orun] - userID error--->" + orderRelationUpdateNotifyReq.toJson());
            }

            JAXBElement<String> productIDs = orderRelationUpdateNotifyReq.getProductID();
            String productID = productIDs == null ? "" : productIDs.getValue();

            String serviceID = IapDbHelper.getChinaTelecomService(productID);
            //订购或者暂停恢复
            if(opType == ChinaTelecomConstants.OPType.ORDER || opType == ChinaTelecomConstants.OPType.PAUSE_RECOVERY){
                if(serviceID != null && !"".equals(serviceID)){
                    //执行订购
                    InfaceDbHelper.execProcOrder(userID, "2", serviceID);
                    SysLog.wsInfo("[orun] - order--->" + orderRelationUpdateNotifyReq.toJson());
                }else{
                    SysLog.wsInfo("[orun] - order serviceID error--->" + orderRelationUpdateNotifyReq.toJson());
                }
            }
            //退订
            else if(opType == ChinaTelecomConstants.OPType.UNSUBSCRIBE || opType == ChinaTelecomConstants.OPType.PAUSE){
                if(serviceID != null && !"".equals(serviceID)){
                    //执行退订
                    InfaceDbHelper.execProcOrder(userID, "3", serviceID);
                    SysLog.wsInfo("[orun] - unorder--->" + orderRelationUpdateNotifyReq.toJson());
                }else{
                    SysLog.wsInfo("[orun] - unorder serviceID error--->" + orderRelationUpdateNotifyReq.toJson());
                }
            }
            //退订所有代码或者暂停所有代码
            else if(opType == ChinaTelecomConstants.OPType.UNSUBSCRIBE_ALL ||opType == ChinaTelecomConstants.OPType.PAUSE_RECOVERY_ALL){
                SysLog.wsInfo("[orun] - unorder all--->" + orderRelationUpdateNotifyReq.toJson());
                Map<String, String> productidMap = IapDbHelper.getChinaTelecomServiceMap();
                for (Map.Entry<String, String> entry : productidMap.entrySet()) {
                    serviceID = entry.getValue();
                    //执行退订
                    InfaceDbHelper.execProcOrder(userID, "3", serviceID);
                    SysLog.wsInfo("[orun] - unorder all serviceID:" + serviceID + "--->" + orderRelationUpdateNotifyReq.toJson());
                }
            }else{
                SysLog.wsInfo("[orun] - opType error--->" + orderRelationUpdateNotifyReq.toJson());
            }

            com.chinatelecom.ismp.sp.rsp.Response _return = new com.chinatelecom.ismp.sp.rsp.Response();
            _return.setStreamingNo(orderRelationUpdateNotifyReq.getStreamingNo());
            _return.setResultCode(0);
            return _return;
        } catch (Exception ex) {
            SysLog.error("[orun] - orderRelationUpdateNotify error" , ex);
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* 业务使用通知请求
     * @see com.chinatelecom.ismp.sp.IsmpSpEngine#serviceConsumeNotify(com.chinatelecom.ismp.sp.req.ServiceConsumeNotifyReq  serviceConsumeNotifyReqPara )*
     */
    public com.chinatelecom.ismp.sp.rsp.Response serviceConsumeNotify(com.chinatelecom.ismp.sp.req.ServiceConsumeNotifyReq serviceConsumeNotifyReqPara) {
        SysLog.wsInfo("Executing IsmpSpEngineImpl.serviceConsumeNotify...");
        try {
            SysLog.wsInfo("[scn] - serviceConsumeNotify--->" + serviceConsumeNotifyReqPara.toJson());
            com.chinatelecom.ismp.sp.rsp.Response _return = new com.chinatelecom.ismp.sp.rsp.Response();
            _return.setStreamingNo(serviceConsumeNotifyReqPara.getStreamingNo());
            _return.setResultCode(0);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* 管理信息通知接口
     * @see com.chinatelecom.ismp.sp.IsmpSpEngine#notifyManagementInfo(com.chinatelecom.ismp.sp.req.NotifyManagementInfoReq  notifyManagementInfoReq )*
     */
    public com.chinatelecom.ismp.sp.rsp.NotifyManagementInfoRsp notifyManagementInfo(com.chinatelecom.ismp.sp.req.NotifyManagementInfoReq notifyManagementInfoReq) {
        SysLog.wsInfo("Executing IsmpSpEngineImpl.notifyManagementInfo...");
        try {
            SysLog.wsInfo("[nmi] - NotifyManagementInfoRsp--->" + notifyManagementInfoReq.toJson());
            com.chinatelecom.ismp.sp.rsp.NotifyManagementInfoRsp _return = new com.chinatelecom.ismp.sp.rsp.NotifyManagementInfoRsp();
            _return.setStreamingNo(notifyManagementInfoReq.getStreamingNo());
            _return.setResultCode(0);
            return _return;
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
